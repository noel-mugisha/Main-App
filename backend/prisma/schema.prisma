// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Model for the existing User table created by Spring Boot
// Prisma can map to this table
model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  password        String?
  role            Role      // Role enum defined below
  emailVerified   Boolean   @default(false) @map("email_verified")
  linkedinId      String?   @unique @map("linkedin_id")
  otp             String?
  otpGeneratedTime DateTime? @map("otp_generated_time")

  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  // Relations to new tables
  projectsOwned   Project[] @relation("ManagerProjects")
  tasksAssigned   Task[]    @relation("AssignedTasks")

  @@map("users")
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  managerId   Int
  manager     User     @relation("ManagerProjects", fields: [managerId], references: [id])
  tasks       Task[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  status      TaskStatus @default(TODO)
  projectId   Int
  project     Project  @relation(fields: [projectId], references: [id])
  assigneeId  Int?
  assignee    User?    @relation("AssignedTasks", fields: [assigneeId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  USER
  MANAGER
  ADMIN
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}

